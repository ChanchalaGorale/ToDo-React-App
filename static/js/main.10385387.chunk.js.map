{"version":3,"sources":["ListItem.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","listItems","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAuCeA,MAnCf,SAAkBC,GACd,IAEMC,EAFQD,EAAME,MAEIC,KAAI,SAAAC,GAEpB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBACAC,KAAK,OACLC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SACI,SAACC,GACEZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAK5C,+BACI,mBAAGH,UAAU,mBACbU,KAAK,QACLR,GAAG,aACHS,QAAU,kBAAMhB,EAAMiB,WAAWb,EAAKI,cAjBhBJ,EAAKI,QAuB/C,OACI,8BACKP,KC0DEiB,E,kDAvFb,WAAYlB,GAAO,IAAD,8BAChB,cAAMA,IACDmB,MAAQ,CACXjB,MAAO,GACPkB,YAAc,CACZV,KAAO,GACPF,IAAM,KAGV,EAAKa,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKL,WAAa,EAAKA,WAAWK,KAAhB,gBAClB,EAAKT,UAAY,EAAKA,UAAUS,KAAf,gBAZD,E,wDAeNV,GACVY,KAAKC,SAAS,CACZL,YAAY,CACVV,KAAME,EAAEE,OAAOL,MACfD,IAAKkB,KAAKC,W,8BAKRf,GACNA,EAAEgB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACM,KAAfA,EAAQnB,KAAU,CACnB,IAAMsB,EAAS,GAAD,mBAAKR,KAAKL,MAAMjB,OAAhB,CAAuB2B,IACrCL,KAAKC,SAAS,CACZvB,MAAO8B,EACPZ,YAAY,CACVV,KAAM,GACNF,IAAK,S,iCAMFA,GACT,IAAMyB,EAAgBT,KAAKL,MAAMjB,MAAMgC,QAAO,SAAA9B,GAAI,OAChDA,EAAKI,MAAMA,KACXgB,KAAKC,SAAS,CACZvB,MAAO+B,M,gCAIHvB,EAAMF,GACd,IAAMN,EAAQsB,KAAKL,MAAMjB,MACzBA,EAAMC,KAAK,SAAAC,GACNA,EAAKI,MAAMA,IACZJ,EAAKM,KAAOA,MAGhBc,KAAKC,SAAS,CACZvB,MAAOA,M,+BAKT,OACA,sBAAKG,UAAU,MAAf,UACE,mCACE,kDAEA,uBAAME,GAAG,aAAa4B,SAAUX,KAAKD,QAArC,UACE,uBAAOjB,KAAK,OAAO8B,YAAY,QAC/B3B,MAAOe,KAAKL,MAAMC,YAAYV,KAC9BC,SAAUa,KAAKH,cACf,wBAAQf,KAAK,SAAb,uBAGJ,cAAC,EAAD,CACAJ,MAASsB,KAAKL,MAAMjB,MAEpBe,WAAaO,KAAKP,WAElBJ,UAAaW,KAAKX,mB,GAhFNwB,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.10385387.chunk.js","sourcesContent":["import react from 'react';\nimport './ListItem.css';\n\n\nfunction ListItem(props){\n    const items = props.items;\n\n    const listItems = items.map(item =>\n        {\n            return <div className=\"list\" key={item.key}>\n                <p>\n                    <input \n                    type=\"text\" \n                    id={item.key} \n                    value={item.text} \n                    onChange= {\n                        (e) => {\n                           props.setUpdate(e.target.value, item.key)\n                        }\n                    }\n                    />\n\n                    <span>\n                        <i className=\"fas fa-trash-alt\" \n                        icon='trash' \n                        id='deleteicon'\n                        onClick={ () => props.deleteItem(item.key)}\n                        ></i></span>\n                </p>\n                \n            </div>\n        })\n    return(\n        <div>\n            {listItems}\n        </div>\n    )\n}\n\nexport default ListItem;","import React from 'react';\nimport './App.css';\nimport ListItem from './ListItem';\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      currentItem : {\n        text : '',\n        key : ''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addItem(e){\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text!==\"\"){\n      const newItems=[...this.state.items, newItem];\n      this.setState({\n        items: newItems,\n        currentItem:{\n          text: '',\n          key: ''\n        }\n      })\n    }\n  }\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item =>\n      item.key!==key);\n      this.setState({\n        items: filteredItems\n      })\n  }\n\n  setUpdate(text, key){\n    const items = this.state.items;\n    items.map (item => {\n      if(item.key===key){\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  render(){\n    return (\n    <div className=\"app\"> \n      <header>\n        <h1>Create ToDo List</h1>\n\n        <form id=\"to-do-form\" onSubmit={this.addItem} >\n          <input type=\"text\" placeholder=\"Title\"\n          value={this.state.currentItem.text} \n          onChange={this.handleInput}  />\n          <button type=\"submit\">Add</button>\n        </form>\n      </header>\n      <ListItem \n      items = {this.state.items}\n\n      deleteItem= {this.deleteItem}\n\n      setUpdate = {this.setUpdate}\n      \n      />\n    </div>   \n  );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}